{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "demosur-dev-df"
		},
		"azure_function_linked_service_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'azure_function_linked_service'"
		},
		"azure_blob_storage_linked_service_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://demosurdevdatalake4418sa.blob.core.windows.net/"
		},
		"azure_function_linked_service_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://demosurdevfunc4418.azurewebsites.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/azure_blob_storage_linked_service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('azure_blob_storage_linked_service_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_function_linked_service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('azure_function_linked_service_properties_typeProperties_functionAppUrl')]",
					"authentication": "Anonymous",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('azure_function_linked_service_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dev_pipeline_payload')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azure_blob_storage_linked_service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dev.json",
						"container": "configs"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"api_name": {
							"type": "string"
						},
						"dataset_name": {
							"type": "string"
						},
						"api_request_payload": {
							"type": "object",
							"properties": {
								"offset": {
									"type": "integer"
								},
								"limit": {
									"type": "integer"
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azure_blob_storage_linked_service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load-pipeline-payloads",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dev_pipeline_payload",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "foreach-ingestion",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "load-pipeline-payloads",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('load-pipeline-payloads').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ingestion-now",
									"type": "AzureFunctionActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": "ingestNow",
										"body": {
											"value": "@{\n    json(concat(\n        '{',\n            '\"correlation_id\":\"', pipeline().parameters.p_correlation_id, '\",',\n            '\"queue_message_id\":\"', guid(), '\",',\n            '\"api_config_payload\":', string(item()),\n        '}'\n    ))\n}\n",
											"type": "Expression"
										},
										"headers": {},
										"method": "POST"
									},
									"linkedServiceName": {
										"referenceName": "azure_function_linked_service",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "append-ingestion-response",
									"type": "AppendVariable",
									"dependsOn": [
										{
											"activity": "ingestion-now",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ingest-response-aggregated",
										"value": {
											"value": "@json(concat(\n  '{',\n  '\"status\":\"', string(activity('ingestion-now').output.status), '\",',\n  '\"correlationId\":\"', string(activity('ingestion-now').output.correlationId), '\",',\n  '\"queueMessageId\":\"', string(activity('ingestion-now').output.queueMessageId), '\",',\n  '\"apiName\":\"', string(activity('ingestion-now').output.apiName), '\",',\n  '\"datasetName\":\"', string(activity('ingestion-now').output.datasetName), '\",',\n  '\"layerName\":\"', string(activity('ingestion-now').output.layerName), '\",',\n  '\"message\":\"', string(activity('ingestion-now').output.message), '\",',\n  '\"apiResponseStatusCode\":', string(activity('ingestion-now').output.apiResponseStatusCode), ',',\n  '\"outputPath\":\"', string(activity('ingestion-now').output.outputPath), '\"',\n  if(contains(activity('ingestion-now').output, 'errorDetails'),\n    concat(', \"errorDetails\":\"', string(activity('ingestion-now').output.errorDetails), '\"'),\n    ''\n  ),\n  '}'\n))\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "final-ingestion-results",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "foreach-ingestion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ingest-final-response",
							"value": {
								"value": "@variables('ingest-response-aggregated')\n\n",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_correlation_id": {
						"type": "string"
					},
					"p_env": {
						"type": "string",
						"defaultValue": "dev"
					}
				},
				"variables": {
					"ingest-response": {
						"type": "String"
					},
					"ingest-response-aggregated": {
						"type": "Array"
					},
					"ingest-final-response": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dev_pipeline_payload')]",
				"[concat(variables('factoryId'), '/linkedServices/azure_function_linked_service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "bronze_pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "init-correlation-id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "bronze_pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"p_correlation_id": {
									"value": "@variables('correlation_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "init-correlation-id",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "correlation_id",
							"value": {
								"value": "@pipeline().RunId\n",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"correlation_id": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/bronze_pipeline')]"
			]
		}
	]
}