name: upload-config-dev

on:
  workflow_dispatch:
    inputs:
      keyvault_name:
        description: 'Nazwa Azure Key Vault, z którego pobrać sekrety.'
        required: true
        default: 'demosur-dev-kv'

jobs:
  upload-config:
    runs-on: ubuntu-latest
    env:
      KEYVAULT_NAME: ${{ github.event.inputs.keyvault_name }}
    steps:
      - uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Fetch secrets from Key Vault
        id: fetch-secrets
        run: |
          STORAGE_ACCOUNT_NAME=$(az keyvault secret show --vault-name "$KEYVAULT_NAME" --name "storage-account-name" --query "value" -o tsv)
          STORAGE_CONTAINER_NAME=$(az keyvault secret show --vault-name "$KEYVAULT_NAME" --name "storage-container-configs-name" --query "value" -o tsv)
          EVENTGRID_TOPIC_NAME=$(az keyvault secret show --vault-name "$KEYVAULT_NAME" --name "eventgrid-topic-name" --query "value" -o tsv)
          RESOURCE_GROUP_NAME=$(az keyvault secret show --vault-name "$KEYVAULT_NAME" --name "resource-group-name" --query "value" -o tsv)

          echo "STORAGE_ACCOUNT_NAME=$STORAGE_ACCOUNT_NAME" >> $GITHUB_ENV
          echo "STORAGE_CONTAINER_NAME=$STORAGE_CONTAINER_NAME" >> $GITHUB_ENV
          echo "EVENTGRID_TOPIC_NAME=$EVENTGRID_TOPIC_NAME" >> $GITHUB_ENV
          echo "RESOURCE_GROUP_NAME=$RESOURCE_GROUP_NAME" >> $GITHUB_ENV


      - name: Create Azure Storage Container
        run: |
          az storage container create \
            --name "$STORAGE_CONTAINER_NAME" \
            --account-name "$STORAGE_ACCOUNT_NAME" 
                  
      - name: Upload config file to Blob Storage
        run: |
          az storage blob upload \
            --account-name "$STORAGE_ACCOUNT_NAME" \
            --container-name "$STORAGE_CONTAINER_NAME" \
            --name "configs/dev.config.json" \
            --file "src/common/config/dev.config.json" \
            --overwrite              

      - name: Get Event Grid credentials
        run: |
          # Pobieranie klucza i endpointu z Azure CLI
          EVENTGRID_KEY=$(az eventgrid topic key list \
            --name "$EVENTGRID_TOPIC_NAME" \
            --resource-group "$RESOURCE_GROUP_NAME" \
            --query "key1" -o tsv)
          EVENTGRID_ENDPOINT=$(az eventgrid topic show \
            --name "$EVENTGRID_TOPIC_NAME" \
            --resource-group "$RESOURCE_GROUP_NAME" \
            --query "endpoint" -o tsv)
          
          # Ustawianie zmiennych środowiskowych dla kolejnych kroków
          echo "EVENTGRID_KEY=$EVENTGRID_KEY" >> $GITHUB_ENV
          echo "EVENTGRID_ENDPOINT=$EVENTGRID_ENDPOINT" >> $GITHUB_ENV
    
      - name: Publish Event to Event Grid
        run: |
          # Skrypt używa zmiennych zdefiniowanych w poprzednim kroku
          cat > event.json <<EOF
          [{
            "id": "$(uuidgen)",
            "eventType": "StartBronzeIngestion",
            "subject": "/dev.config.json",
            "eventTime": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "data": { "config_file_path": "configs/dev.config.json" },
            "dataVersion": "1.0"
          }]
          EOF
          
          curl -X POST -H "aeg-sas-key: $EVENTGRID_KEY" \
                -H "Content-Type: application/json" \
                --data-binary @event.json \
              "$EVENTGRID_ENDPOINT"
          

      - name: Logout from Azure
        if: always()
        run: az logout