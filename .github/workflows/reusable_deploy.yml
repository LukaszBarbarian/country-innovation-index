name: Reusable Deployment

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      azure_credentials:
        required: true

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.azure_credentials }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Init & Apply
        id: terraform_apply
        run: |
          terraform init
          terraform workspace select ${{ inputs.environment }} || terraform workspace new ${{ inputs.environment }}
          terraform apply -auto-approve -input=false -var="environment=${{ inputs.environment }}"
        working-directory: ${{ env.TERRAFORM_DIR }}

      - name: Get Terraform Outputs
        id: tf_outputs
        run: |
          echo "function_app_name=$(terraform output -raw function_app_name)" >> $GITHUB_OUTPUT
          echo "data_lake_storage_account_name=$(terraform output -raw data_lake_storage_account_name)" >> $GITHUB_OUTPUT
        working-directory: ${{ env.TERRAFORM_DIR }}

      - name: Build and Deploy Function App
        env:
          FUNCTION_APP_NAME: ${{ steps.tf_outputs.outputs.function_app_name }}
          AZURE_DATA_LAKE_STORAGE_ACCOUNT_NAME: ${{ steps.tf_outputs.outputs.data_lake_storage_account_name }}
        run: |
          # Kompilacja i deploy funkcji
          sudo apt-get update && sudo apt-get install -y zip
          zip -r ${{ env.AZURE_FUNCTION_APP_PACKAGE_FULL_PATH }} function_app.py requirements.txt host.json src/common src/bronze
          az functionapp deployment source config-zip --resource-group ${{ env.RESOURCE_GROUP_NAME }} --name ${{ env.FUNCTION_APP_NAME }} --src ${{ env.AZURE_FUNCTION_APP_PACKAGE_FULL_PATH }}

          # Upload manifest√≥w
          for layer in bronze silver gold; do
            echo "Uploading ${{ inputs.environment }}.manifest.json to layer: $layer"
            az storage blob upload \
              --account-name "$AZURE_DATA_LAKE_STORAGE_ACCOUNT_NAME" \
              --container-name "$layer" \
              --file "src/$layer/manifest/${{ inputs.environment }}.manifest.json" \
              --name "manifest/${{ inputs.environment }}.manifest.json" \
              --overwrite true \
              --auth-mode login
          done
        
      - name: Logout from Azure
        run: az logout
        if: always()